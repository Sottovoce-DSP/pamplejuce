name: Build LAME Win Mac

on:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build_lame:
    strategy:
      matrix:
        include:
          - name: macOS
            os: macos-latest
          - name: Windows
            os: windows-latest
    runs-on: ${{ matrix.os }}
    name: Build LAME on ${{ matrix.name }}
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Install MSYS2 (Windows only)
      - name: Set up MSYS2
        if: matrix.name == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64

      # Install build tools (Windows only)
      - name: Install build tools
        if: matrix.name == 'Windows'
        run: |
          pacman -Sy --noconfirm --needed base-devel mingw-w64-x86_64-toolchain
        shell: msys2 {0}

      - name: Download and extract LAME source code
        run: |
          curl -LO https://downloads.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz
          tar -xzf lame-3.100.tar.gz

      # Fix langinfo.h and other issues
      - name: Apply build fixes
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            # Create directory for include
            mkdir -p lame-3.100/include
            
            # Create langinfo.h file
            echo "#ifndef _LANGINFO_H" > lame-3.100/include/langinfo.h
            echo "#define _LANGINFO_H" >> lame-3.100/include/langinfo.h
            echo "#define CODESET 1" >> lame-3.100/include/langinfo.h
            echo "static inline char* nl_langinfo(int item) {" >> lame-3.100/include/langinfo.h
            echo "    return \"UTF-8\";" >> lame-3.100/include/langinfo.h
            echo "}" >> lame-3.100/include/langinfo.h
            echo "#endif" >> lame-3.100/include/langinfo.h

            # Fix include paths
            sed -i 's|^INCLUDES = .*|INCLUDES = -I$(top_srcdir)/include -I$(srcdir)|' lame-3.100/frontend/Makefile.in
            sed -i 's|#include <langinfo.h>|#include "langinfo.h"|' lame-3.100/frontend/parse.c
          fi

          # Remove lame_init_old symbol
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            sed -i '' '/lame_init_old/d' lame-3.100/include/libmp3lame.sym
          else
            sed -i '/lame_init_old/d' lame-3.100/include/libmp3lame.sym
          fi

      - name: Build and install LAME
        run: |
          cd lame-3.100
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            CPPFLAGS="-I$PWD/include" ./configure --prefix=$HOME/lame-install --host=x86_64-w64-mingw32
          else
            export CFLAGS="-arch x86_64 -arch arm64"
            export LDFLAGS="-arch x86_64 -arch arm64"
            ./configure --prefix=$HOME/lame-install
          fi
          make
          make install

      - name: Copy LAME binary to output
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            cp $HOME/lame-install/bin/lame.exe ./lame
          else
            cp $HOME/lame-install/bin/lame ./lame
          fi

      - name: Package LAME executable
        run: |
          zip -j LAME-${{ matrix.name }}.zip lame

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: LAME-${{ matrix.name }}.zip
          path: LAME-${{ matrix.name }}.zip