name: Build LAME Win Mac

on:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build_lame:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: macOS
            os: macos-latest
            filename: lame
            zipname: LAME-macOSX.zip
          - name: Windows-x86
            os: windows-latest
            arch: x86
            filename: lame32
            zipname: LAME-windows32.zip
          - name: Windows-x64
            os: windows-latest
            arch: x64
            filename: lame64
            zipname: LAME-windows64.zip
    runs-on: ${{ matrix.os }}
    name: Build LAME on ${{ matrix.name }}
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4
      
      # Download and extract LAME source
      - name: Download and extract LAME source code
        run: |
          curl -LO https://downloads.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz
          tar -xzf lame-3.100.tar.gz
      
      # Remove deprecated symbol
      - name: Remove 'lame_init_old' symbol
        run: |
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            sed -i '' '/lame_init_old/d' lame-3.100/include/libmp3lame.sym
          else
            sed -i '/lame_init_old/d' lame-3.100/include/libmp3lame.sym
          fi
      
      # Setup MSVC toolchain (Windows)
      - name: Setup MSVC
        if: contains(matrix.name, 'Windows')
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}
      
      # Windows-specific MSVC build
      - name: Build LAME with MSVC (Windows)
        if: contains(matrix.name, 'Windows')
        shell: cmd
        run: |
          cd lame-3.100
          copy configMS.h config.h
          powershell -NoProfile -Command "& {
              $content = Get-Content Makefile.MSVC;
              $updatedContent = $content -replace '/machine:I386', '/machine:${{ matrix.machine }}';
              Set-Content -Path Makefile.MSVC -Value $updatedContent;
          }"
          nmake -f Makefile.MSVC MACHINE=${{ matrix.machine }} comp=msvc asm=no
      
      # macOS build
      - name: Build and install LAME (macOS)
        if: matrix.name == 'macOS'
        run: |
          cd lame-3.100
          export CFLAGS="-arch x86_64 -arch arm64"
          export LDFLAGS="-arch x86_64 -arch arm64"
          ./configure --prefix=$HOME/lame-install
          make
          make install
      
      # Copy binary to output
      - name: Copy LAME binary to output
        run: |
          mkdir -p output
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            cp lame-3.100/output/lame.exe ./output/${{ matrix.filename }}.exe
          else
            cp $HOME/lame-install/bin/lame ./output/${{ matrix.filename }}
          fi
      
      # Package executable
      - name: Package LAME executable
        run: |
          cd output
          zip -j ../${{ matrix.zipname }} *
      
      # Upload artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.zipname }}
          path: ${{ matrix.zipname }}
