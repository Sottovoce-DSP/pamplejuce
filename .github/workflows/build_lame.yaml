name: Build LAME Win Mac

on:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build_lame:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: macOS
            os: macos-latest
            exe_name: lame
          - name: Windows-x86
            os: windows-latest
            msvc_arch: x86
            nmake_machine: I386
            exe_name: lame32.exe
          - name: Windows-x64
            os: windows-latest
            msvc_arch: x64
            nmake_machine: AMD64
            exe_name: lame64.exe
    runs-on: ${{ matrix.os }}
    name: Build LAME on ${{ matrix.name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download and extract LAME source code
        run: |
          curl -LO https://downloads.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz
          tar -xzf lame-3.100.tar.gz
      
      - name: Remove 'lame_init_old' symbol
        run: |
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            sed -i '' '/lame_init_old/d' lame-3.100/include/libmp3lame.sym
          else
            sed -i '/lame_init_old/d' lame-3.100/include/libmp3lame.sym
          fi
      
      - name: Build LAME with MSVC (Windows)
        if: contains(matrix.name, 'Windows')
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.msvc_arch }}
          run: |
            cd lame-3.100
            copy configMS.h config.h
            nmake -f Makefile.MSVC comp=msvc asm=no machine=${{ matrix.nmake_machine }}
        shell: cmd
      
      - name: Build and install LAME (macOS)
        if: matrix.name == 'macOS'
        run: |
          cd lame-3.100
          export CFLAGS="-arch x86_64 -arch arm64"
          export LDFLAGS="-arch x86_64 -arch arm64"
          ./configure --prefix=$HOME/lame-install
          make
          make install
      
      - name: Copy and rename LAME binary to output
        run: |
          mkdir -p output
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            cp lame-3.100/output/lame.exe "./output/${{ matrix.exe_name }}"
          else
            cp $HOME/lame-install/bin/lame "./output/${{ matrix.exe_name }}"
          fi
      
      - name: Package LAME executable (Windows)
        if: contains(matrix.name, 'Windows')
        shell: pwsh
        run: |
          Compress-Archive -Path "./output/*" -DestinationPath "LAME-${{ matrix.name }}.zip"
      
      - name: Package LAME executable (macOS)
        if: matrix.name == 'macOS'
        run: |
          cd output
          zip -j ../LAME-${{ matrix.name }}.zip *
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: LAME-${{ matrix.name }}.zip
          path: LAME-${{ matrix.name }}.zip
