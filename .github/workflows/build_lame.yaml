name: Build LAME Win Mac

on:
  workflow_dispatch:

jobs:
  build_lame:
    strategy:
      matrix:
        include:
          - name: macOS
            os: macos-latest
          - name: Windows
            os: windows-latest
    runs-on: ${{ matrix.os }}
    name: Build LAME on ${{ matrix.name }}
    steps:

      # Checkout code (required even if the repo is empty)
      - name: Checkout code
        uses: actions/checkout@v4

      # Common step: Download and extract LAME source code
      - name: Download and extract LAME source code
        run: |
          curl -LO https://downloads.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz
          tar -xzf lame-3.100.tar.gz

      - name: Remove 'lame_init_old' line from 'include/libmp3lame.sym'
        working-directory: lame-3.100
        run: |
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            sed -i '' '/lame_init_old/d' include/libmp3lame.sym
          else
            sed -i '/lame_init_old/d' include/libmp3lame.sym
          fi

      # macOS steps
      - name: Install Ninja (macOS)
        if: matrix.name == 'macOS'
        run: brew install ninja

      - name: Build LAME using CMake and Ninja (macOS)
        if: matrix.name == 'macOS'
        working-directory: lame-3.100
        run: |
          mkdir build && cd build
          # Generate build files with CMake
          cmake -G Ninja -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64" ..
          # Build the project
          ninja

      - name: Package LAME executable (macOS)
        if: matrix.name == 'macOS'
        run: |
          zip -j LAME-mac.zip lame-3.100/build/frontend/lame

      - name: Upload artifact (macOS)
        if: matrix.name == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: LAME-mac.zip
          path: LAME-mac.zip

      # Windows steps
      - name: Setup MSVC toolchain and developer command prompt (Windows)
        if: matrix.name == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install Ninja (Windows)
        if: matrix.name == 'Windows'
        run: choco install ninja

      - name: Build LAME using CMake and Ninja (Windows)
        if: matrix.name == 'Windows'
        working-directory: lame-3.100
        run: |
          mkdir build && cd build
          # Generate build files with CMake
          cmake -G Ninja ..
          # Build the project
          ninja

      - name: Package LAME executable (Windows)
        if: matrix.name == 'Windows'
        run: |
          zip -j LAME-win.zip lame-3.100/build/frontend/Release/lame.exe

      - name: Upload artifact (Windows)
        if: matrix.name == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: LAME-win.zip
          path: LAME-win.zip
