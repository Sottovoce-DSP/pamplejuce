name: Build LAME Win Mac

on:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build_lame:
    strategy:
      matrix:
        include:
          - name: macOS
            os: macos-latest
          - name: Windows
            os: windows-latest
    runs-on: ${{ matrix.os }}
    name: Build LAME on ${{ matrix.name }}
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download and extract LAME source code
        run: |
          curl -LO https://downloads.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz
          tar -xzf lame-3.100.tar.gz

      # Build LAME (Windows)
      - name: Build LAME (Windows)
        if: matrix.name == 'Windows'
        shell: cmd
        run: |
          cd lame-3.100
          copy configMS.h config.h
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          nmake -f Makefile.MSVC comp=msvc asm=no

      # Build LAME (macOS)
      - name: Build LAME (macOS)
        if: matrix.name == 'macOS'
        run: |
          cd lame-3.100
          export CFLAGS="-arch x86_64 -arch arm64"
          export LDFLAGS="-arch x86_64 -arch arm64"
          ./configure --prefix=$HOME/lame-install
          make
          make install

      - name: Copy LAME binary to output
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            cp lame-3.100/output/*.exe ./lame
          else
            cp $HOME/lame-install/bin/lame ./lame
          fi

      - name: Package LAME executable
        run: |
          zip -j LAME-${{ matrix.name }}.zip lame

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: LAME-${{ matrix.name }}.zip
          path: LAME-${{ matrix.name }}.zip